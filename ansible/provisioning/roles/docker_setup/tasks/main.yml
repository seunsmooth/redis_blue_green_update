---
- name: "state docker app"
  become: yes
  shell: docker rm -f $(docker ps -aq)
  ignore_errors: yes

- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: install pip3
  become: true
  apt: 
    name: ['python3-pip' , ' python-pip']
    state: present
    update_cache: yes 
    force_apt_get: yes

- name: Install Docker Module for Python
  pip:
   name: docker


- name: Install aptitude using apt
  apt: 
    name: aptitude 
    state: latest
    update_cache: yes 
    force_apt_get: yes

- name: Install required system packages
  apt:
   name: "{{ item }}"
   state: latest 
   update_cache: yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
- name: Install Docker.
  package:
    name: "{{ docker_package }}"
    state: "{{ docker_package_state }}"
  notify: restart docker
- name: Set the stable docker repository
  apt_repository: 
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} edge"
    state: present
    update_cache: yes
- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"

- name: Ensure handlers are notified now to avoid firewall conflicts.
  meta: flush_handlers

- include_tasks: docker-compose.yml
  when: docker_install_compose | bool

- name: Ensure docker users are installed 
  shell:  sudo usermod -aG docker $USER

- include_tasks: docker-users.yml
  when: docker_users | length > 0